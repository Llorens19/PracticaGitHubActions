name: PracticaGitHubActions

on:
  push:
    branches:
      - main

jobs:
  linter_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

  cypress_job:
    needs: linter_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Start Next.js server
        run: npm run dev &
        env:
          PORT: 3000

      - name: Wait for server to be ready
        run: npx wait-on http://localhost:3000

      - name: Run Cypress tests
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          spec: cypress/integration/1-my-tests/**/*.spec.js
        continue-on-error: true

      - name: Save Cypress results to artifact
        run: |
          echo "Saving Cypress results..."
          npx cypress run --spec 'cypress/integration/1-my-tests/**/*.spec.js' > result.txt || echo "Cypress tests failed"
        continue-on-error: true

      - name: Upload Cypress artifact
        uses: actions/upload-artifact@v3
        with:
          name: cypress-results
          path: result.txt
          
  deploy_job:
    needs: cypress_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.TOKENGITHUB }}
          vercel-args: '--prod --yes'
          working-directory: ./

  add_badge_job:
    needs: cypress_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKENGITHUB }}
          fetch-depth: 0

      - name: Download Cypress artifact
        uses: actions/download-artifact@v3
        with:
          name: cypress-results

      - name: Determine Cypress result
        id: read_result
        run: |
          if grep -q "failure" result.txt; then
            echo "CYPRESS_OUTCOME=failure" >> $GITHUB_ENV
          else
            echo "CYPRESS_OUTCOME=success" >> $GITHUB_ENV
          fi

      - name: Update README with badge
        run: |
          awk '/## Resultados de los Últimos Tests/ {print; print ($CYPRESS_OUTCOME == "failure" ? "![Test Badge](https://img.shields.io/badge/test-failure-red)" : "![Test Badge](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)"); next} 1' README.md > temp.md && mv temp.md README.md
          git config --global user.email "alvgarcam@alu.edu.gva.es"
          git config --global user.name "AlvaroGarCam"
          git add README.md
          git commit -m "Update README.md with Cypress test results" || echo "No changes to commit"
          git reset HEAD result.txt  # Resetea el archivo result.txt para evitar conflictos
          git stash || echo "No changes to stash"
          git fetch origin main
          git rebase origin/main || (git rebase --abort && echo "Rebase failed; skipping rebase")
          git push origin main || echo "Push failed; skipping push"
        
          
          
  metrics_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout personal repository
        uses: actions/checkout@v4
        with:
          repository: llorens19/PracticaGitHubActions
          token: ${{ secrets.TOKENGITHUB }}

      - name: Generate metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.TOKENGITHUB }}
          base: repositories          
          template: classic           
          config_timezone: Europe/Madrid 

      - name: Update README with metrics
        run: |
          echo "Añadiendo métricas al README.md..."
          cat metrics.md >> README.md
          git config --global user.email "llorenssorianodiego@gmail.com" # Reemplaza con tu correo real
          git config --global user.name "llorens19"
          git add README.md
          git commit -m "Update README.md with metrics" || echo "No changes to commit"
          git pull --rebase origin main
          git push origin main || echo "Push failed; skipping push"
