name: PracticaGitHubActions

on:
  push:
    branches:
      - main

jobs:
  linter_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

  cypress_job:
    needs: linter_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Start server and run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          config-file: cypress.json
          build: npm run build
          start: npm start
        continue-on-error: true
        id: cypress
          # start: npm run dev
          # wait-on: http://localhost:3000
          # wait-on-timeout: 120
          # record: false
          # browser: electron

      - name: Save Cypress results
        run: echo "${{ steps.cypress.outputs }}" > result.txt


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cypress-results
          path: result.txt
          
  deploy_job:
    needs: cypress_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.TOKENGITHUB }} 
          vercel-args: '--prod --yes'
          working-directory: ./ 
          
  add_badge_job:
    # needs: metrics_job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKENGITHUB }}

      - name: Download Cypress artifact
        uses: actions/download-artifact@v3
        with:
          name: cypress-results

      - name: Determine Cypress result
        id: read_result
        run: |
          echo "Reading Cypress result..."
          if grep -q "failure" result.txt; then
            echo "CYPRESS_OUTCOME=failure" >> $GITHUB_ENV
          else
            echo "CYPRESS_OUTCOME=success" >> $GITHUB_ENV
          fi

      - name: Update README with badge
        run: |
          echo "Updating README.md with badge..."
          awk '/## Resultados de los Ãšltimos Tests/ {print; print ($CYPRESS_OUTCOME == "failure" ? "![Test Badge](https://img.shields.io/badge/test-failure-red)" : "![Test Badge](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)"); next} 1' README.md > temp.md && mv temp.md README.md
          git config --global user.email "alvgarcam@alu.edu.gva.es"
          git config --global user.name "AlvaroGarCam"
          git add README.md
          git commit -m "Update README.md with Cypress test results" || echo "No changes to commit"
          git fetch origin main
          git rebase origin/main || (git rebase --abort && echo "Rebase failed; skipping rebase")
          git push origin main || echo "Push failed; skipping push"
